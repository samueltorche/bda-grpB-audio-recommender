{"paragraphs":[{"text":"%md\n# User recommendation using clustering\n**BDA** MSE 2020\nAyrton Dumas, Marco Mattei & Samuel Torche","user":"anonymous","dateUpdated":"2020-06-18T11:51:30+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>User recommendation using clustering</h1>\n<p><strong>BDA</strong> MSE 2020<br/>Ayrton Dumas, Marco Mattei &amp; Samuel Torche</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1591270953262_-1810263392","id":"20200515-085712_77617268","dateCreated":"2020-06-04T11:42:33+0000","dateStarted":"2020-06-18T11:51:30+0000","dateFinished":"2020-06-18T11:51:30+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:4725"},{"text":"%md\n## importation","user":"anonymous","dateUpdated":"2020-06-04T11:42:39+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>importation</h2>\n</div>"}]},"apps":[],"jobName":"paragraph_1591270953265_1493635469","id":"20200515-094050_1064013506","dateCreated":"2020-06-04T11:42:33+0000","dateStarted":"2020-06-04T11:42:39+0000","dateFinished":"2020-06-04T11:42:39+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4726"},{"text":"val rawUserArtistData = spark.read.textFile(\"/data/user_artist_data.txt\")\nrawUserArtistData.take(5).foreach(println)","user":"anonymous","dateUpdated":"2020-06-18T09:44:56+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"1000002 1 55\n1000002 1000006 33\n1000002 1000007 8\n1000002 1000009 144\n1000002 1000010 314\nrawUserArtistData: org.apache.spark.sql.Dataset[String] = [value: string]\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://172.17.0.2:4040/jobs/job?id=0"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1591270953266_-2060451691","id":"20200515-091817_1415949822","dateCreated":"2020-06-04T11:42:33+0000","dateStarted":"2020-06-18T09:44:56+0000","dateFinished":"2020-06-18T09:45:00+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4727"},{"text":"%md\n## Data preprocessing","user":"anonymous","dateUpdated":"2020-06-18T10:04:57+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>Data preprocessing</h2>\n</div>"}]},"apps":[],"jobName":"paragraph_1591270953266_-549212363","id":"20200515-092006_1449314714","dateCreated":"2020-06-04T11:42:33+0000","dateStarted":"2020-06-18T10:04:57+0000","dateFinished":"2020-06-18T10:04:57+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4728"},{"text":"val rawArtistAlias = spark.read.textFile(\"/data/artist_alias.txt\")\nval artistAlias = rawArtistAlias.flatMap { line =>\n val Array(artist, alias) = line.split('\\t')\n if (artist.isEmpty) {\n None\n } else {\n Some((artist.toInt, alias.toInt))\n }\n}.collect().toMap\nartistAlias.head","user":"anonymous","dateUpdated":"2020-06-18T09:45:26+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"rawArtistAlias: org.apache.spark.sql.Dataset[String] = [value: string]\nartistAlias: scala.collection.immutable.Map[Int,Int] = Map(1208690 -> 1003926, 2012757 -> 4569, 6949139 -> 1085752, 1109727 -> 1239120, 6772751 -> 1244705, 2070533 -> 1021544, 1157679 -> 2194, 9969617 -> 5630, 2034496 -> 1116214, 6764342 -> 40, 1272489 -> 1278238, 2108744 -> 1009267, 10349857 -> 1000052, 2145319 -> 1020463, 2126338 -> 2717, 10165456 -> 1001169, 6779368 -> 1239506, 10278137 -> 1001523, 9939075 -> 1329390, 2037201 -> 1274155, 1248585 -> 2885, 1106945 -> 1399, 6811322 -> 1019016, 9978396 -> 1784, 6676961 -> 1086433, 2117821 -> 2611, 6863616 -> 1277013, 6895480 -> 1000993, 6831632 -> 1246136, 1001719 -> 1009727, 10135633 -> 4250, 7029291 -> 1034635, 6967939 -> 1002734, 6864694 -> 1017311, 1237279 -> 1029..."}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://172.17.0.2:4040/jobs/job?id=2"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1591270953267_1176991362","id":"20200515-094134_490320359","dateCreated":"2020-06-04T11:42:33+0000","dateStarted":"2020-06-18T09:45:26+0000","dateFinished":"2020-06-18T09:45:27+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4729"},{"text":"%md\n## Building Model","user":"anonymous","dateUpdated":"2020-06-04T11:43:12+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>Building Model</h2>\n</div>"}]},"apps":[],"jobName":"paragraph_1591270953267_1291137387","id":"20200515-101217_1486280330","dateCreated":"2020-06-04T11:42:33+0000","dateStarted":"2020-06-04T11:43:12+0000","dateFinished":"2020-06-04T11:43:12+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4730"},{"text":"import org.apache.spark.sql._\nimport org.apache.spark.broadcast._\nimport org.apache.spark.ml.clustering.KMeans\nimport org.apache.spark.mllib.linalg.{Vector, Vectors}\n\nimport org.apache.spark.ml.feature.{ StringIndexerModel, VectorAssembler }\n\n\n\nimport spark.implicits._\n\ndef buildCounts( rawUserArtistData: Dataset[String], bArtistAlias: Broadcast[Map[Int,Int]]): DataFrame = {\n    rawUserArtistData.map { line =>\n        val Array(userID, artistID, count) = line.split(' ').map(_.toInt)\n        val finalArtistID = bArtistAlias.value.getOrElse(artistID, artistID)\n        (userID, finalArtistID, count)\n        \n    }.toDF(\"user\", \"artist\", \"count\")\n}\n\nval bArtistAlias = spark.sparkContext.broadcast(artistAlias)\nval trainData = buildCounts(rawUserArtistData, bArtistAlias)\ntrainData.printSchema()\n\n\nval assembler = new VectorAssembler()\n  .setInputCols(Array(\"user\", \"artist\", \"count\"))\n  .setOutputCol(\"features\")\n\nval output = assembler.transform(trainData).select(\"features\")\noutput.show()\n\n\n","user":"anonymous","dateUpdated":"2020-06-18T10:05:37+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"root\n |-- user: integer (nullable = false)\n |-- artist: integer (nullable = false)\n |-- count: integer (nullable = false)\n\n+--------------------+\n|            features|\n+--------------------+\n|[1000002.0,1.0,55.0]|\n|[1000002.0,100000...|\n|[1000002.0,100000...|\n|[1000002.0,100000...|\n|[1000002.0,100001...|\n|[1000002.0,100001...|\n|[1000002.0,100001...|\n|[1000002.0,100001...|\n|[1000002.0,100002...|\n|[1000002.0,100002...|\n|[1000002.0,100002...|\n|[1000002.0,100003...|\n|[1000002.0,100003...|\n|[1000002.0,100004...|\n|[1000002.0,100004...|\n|[1000002.0,100005...|\n|[1000002.0,100005...|\n|[1000002.0,100005...|\n|[1000002.0,100005...|\n|[1000002.0,100006...|\n+--------------------+\nonly showing top 20 rows\n\nimport org.apache.spark.sql._\nimport org.apache.spark.broadcast._\nimport org.apache.spark.ml.clustering.KMeans\nimport org.apache.spark.mllib.linalg.{Vector, Vectors}\nimport org.apache.spark.ml.feature.{StringIndexerModel, VectorAssembler}\nimport spark.implicits._\nbuildCounts: (rawUserArtistData: org.apache.spark.sql.Dataset[String], bArtistAlias: org.apache.spark.broadcast.Broadcast[Map[Int,Int]])org.apache.spark.sql.DataFrame\nbArtistAlias: org.apache.spark.broadcast.Broadcast[scala.collection.immutable.Map[Int,Int]] = Broadcast(7)\ntrainData: org.apache.spark.sql.DataFrame = [user: int, artist: int ... 1 more field]\nassembler: org.apache.spark.ml.feature.VectorAssembler = vecAssembler_b20f663a8398\noutput: org.apache.spark.sql.DataFrame = [features: vector]\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://172.17.0.2:4040/jobs/job?id=3"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1591270953267_539065612","id":"20200515-101219_1603616177","dateCreated":"2020-06-04T11:42:33+0000","dateStarted":"2020-06-18T09:45:31+0000","dateFinished":"2020-06-18T09:45:36+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4731"},{"text":"%md\n## Clustering\n","user":"anonymous","dateUpdated":"2020-06-04T11:43:15+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>Clustering</h2>\n</div>"}]},"apps":[],"jobName":"paragraph_1591270953268_-1989602925","id":"20200604-112844_84929119","dateCreated":"2020-06-04T11:42:33+0000","dateStarted":"2020-06-04T11:43:15+0000","dateFinished":"2020-06-04T11:43:15+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4732"},{"text":"import org.apache.spark.ml.clustering.KMeans\n\n// ------ IMPORTANT ------\n// CETTE CELLULE PEUT PRENDRE PLUSIEURS HEURES A S'EXECUTER, IL N'EST PAS NECESSAIRE DE LE FAIRE DE VOTRE COTÉ\n\n\n// Evaluations pour la méthode du coude\n\nval nums = Seq(3,4,5,6,7,8,9,10)\nfor (n <- nums) {\n    val kmeans = new KMeans().setK(n).setSeed(1L)\n    val model = kmeans.fit(output)\n    \n    // Evaluate clustering by computing Within Set Sum of Squared Errors.\n    val WSSSE = model.computeCost(output)\n    println(s\"Within Set Sum of Squared Errors = $WSSSE\")\n}\n","user":"anonymous","dateUpdated":"2020-06-18T11:51:10+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Within Set Sum of Squared Errors = 1.2445173257535345E19\nWithin Set Sum of Squared Errors = 7.2132628707644774E18\nWithin Set Sum of Squared Errors = 3.2724949687905096E18\nWithin Set Sum of Squared Errors = 3.1214615696898002E18\nWithin Set Sum of Squared Errors = 1.93926729786017075E18\nWithin Set Sum of Squared Errors = 1.66029903556209408E18\nWithin Set Sum of Squared Errors = 9.7151945175618534E17\nWithin Set Sum of Squared Errors = 1.01901052435793869E18\nimport org.apache.spark.ml.clustering.KMeans\nnums: Seq[Int] = List(3, 4, 5, 6, 7, 8, 9, 10)\n"}]},"apps":[],"jobName":"paragraph_1591270953268_-1256036099","id":"20200604-112902_1482377755","dateCreated":"2020-06-04T11:42:33+0000","dateStarted":"2020-06-04T11:54:00+0000","dateFinished":"2020-06-04T14:47:20+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4733"},{"text":"%python\nimport matplotlib.pyplot as plt\n\n\ny = [2.994013876532718E12,1.3635392658307017E12,5.455360328990005E11,4.745877324400049E10,5.054387891831543E9,4.903026041000488E9,2.37002845E7,2.37002845E7]\nx = [3,4,5,6,7,8,9,10]\n\nplt.plot(x,y)\n","user":"anonymous","dateUpdated":"2020-06-18T09:43:43+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"[<matplotlib.lines.Line2D at 0x7fd1e0350850>]<matplotlib.figure.Figure at 0x7fd1e0388550>\n"},{"type":"IMG","data":"\n"}]},"apps":[],"jobName":"paragraph_1591350061936_-2070482698","id":"20200605-094101_25537414","dateCreated":"2020-06-05T09:41:01+0000","dateStarted":"2020-06-18T09:43:43+0000","dateFinished":"2020-06-18T09:43:44+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4734"},{"text":"import org.apache.spark.ml.clustering.KMeans\n\nval kmeans5 = new KMeans().setK(5).setSeed(1L)\nval model5 = kmeans5.fit(output)","user":"anonymous","dateUpdated":"2020-06-18T09:45:46+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.apache.spark.ml.clustering.KMeans\nkmeans5: org.apache.spark.ml.clustering.KMeans = kmeans_8fdb9d185f22\nmodel5: org.apache.spark.ml.clustering.KMeansModel = kmeans_8fdb9d185f22\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://172.17.0.2:4040/jobs/job?id=4","http://172.17.0.2:4040/jobs/job?id=5","http://172.17.0.2:4040/jobs/job?id=6","http://172.17.0.2:4040/jobs/job?id=7","http://172.17.0.2:4040/jobs/job?id=8","http://172.17.0.2:4040/jobs/job?id=9","http://172.17.0.2:4040/jobs/job?id=10","http://172.17.0.2:4040/jobs/job?id=11","http://172.17.0.2:4040/jobs/job?id=12"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1591351009713_305749536","id":"20200605-095649_2053668422","dateCreated":"2020-06-05T09:56:49+0000","dateStarted":"2020-06-18T09:45:46+0000","dateFinished":"2020-06-18T09:54:18+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4735"},{"text":"%spark\nmodel5.clusterCenters.foreach(println)\n","user":"anonymous","dateUpdated":"2020-06-18T10:03:33+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"[2196966.5331834923,1133287.9184344374,14.775744653861288]\n[1937856.82232567,6792794.914576857,8.281278224151075]\n[2094679.1552947937,1.0298832654158525E7,5.354244339731065]\n[2200211.399371116,2100.4498808493045,18.702390940830643]\n[1028017.4648866712,902207.1602895714,18.353271843924766]\n"}]},"apps":[],"jobName":"paragraph_1591351711257_-1278097470","id":"20200605-100831_863844366","dateCreated":"2020-06-05T10:08:31+0000","dateStarted":"2020-06-18T10:03:33+0000","dateFinished":"2020-06-18T10:03:33+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4736"},{"text":"%pyspark\nfrom mpl_toolkits.mplot3d import Axes3D\nimport matplotlib.pyplot as plt\n\n\n\nfig = plt.figure()\nax = fig.add_subplot(111, projection='3d')\n\nx =[2196966.5331834923,1937856.82232567,2094679.1552947937,2200211.399371116,1028017.4648866712]\ny =[1133287.9184344374,6792794.914576857,1.0298832654158525E7,2100.4498808493045,902207.1602895714]\nz =[14.775744653861288,8.281278224151075,5.354244339731065,18.702390940830643,18.353271843924766]\n\n\n\nax.scatter(x, y, z, c='r', marker='o')\n\nax.set_xlabel('X Label')\nax.set_ylabel('Y Label')\nax.set_zlabel('Z Label')\n\nplt.show()","user":"anonymous","dateUpdated":"2020-06-18T10:03:42+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"<matplotlib.figure.Figure at 0x7fe6c812c150>\n"},{"type":"IMG","data":"\n"}]},"apps":[],"jobName":"paragraph_1591351593688_1359237987","id":"20200605-100633_613976167","dateCreated":"2020-06-05T10:06:33+0000","dateStarted":"2020-06-18T10:03:43+0000","dateFinished":"2020-06-18T10:03:43+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4737"}],"name":"Clustering User Recommendation","id":"2FA6HBERH","noteParams":{},"noteForms":{},"angularObjects":{"md:shared_process":[],"python:shared_process":[],"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}